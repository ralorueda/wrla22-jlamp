--- Just a simple nondeterministic dam controller

mod DAM-CONTROLLER is
  protecting BOOL .
  protecting META-LEVEL .
  protecting REAL-INTEGER .
  
  sorts SpillwayId Aperture Spillway Spillways DamState TimeStamp .
  subsort Spillway < Spillways .
  subsort Real < TimeStamp .
  sort State .
  
  ops s1 s2 s3 : -> SpillwayId [ctor] .
  ops close open1 open2 open3 : -> Aperture [ctor] .
  op `[_`,_`] : SpillwayId Aperture -> Spillway [ctor] .
  op empty : -> Spillways [ctor] . 
  op __ : Spillways Spillways -> Spillways [ctor assoc comm id: empty] .

  vars T T1 T2 : TimeStamp .
  
  --- A term of sort State is a triple  [spillways, volume, timestamp, ApertureCommand?] where spillways is a multiset 
  --- of spillways, volume is the basin volume at the time instant timetamp, and ApertureCommand? 
  --- is a Boolean value that indicates whether a spillway aperture command can be fired.
  op `{_;_;_;_`} : Spillways Real TimeStamp Bool -> State .  
 
  var S : SpillwayId .
  vars O1 O2 O3 : Aperture .
  vars V V' H : Real .
  var SC : Spillways .
  var B : Bool .
   
  --- The following rules changes the opening configuration of a given spillway whenever the ApertureCommand? flag is set 
  --- to true.
  --- Note that these rules are instantaneous and thus do not change the basin volume. 
  --- We consider the following aperture commands:
  ---    * open
  ---    * close
  ---    * nocmd
  --- The aperture command open (resp. close) defines
  --- an increasing (resp. decreasing) spillway discharge capacity policy. 
  --- The nocmd aperture command keeps the opening configuration of the spillways unchanged.
      
  rl [openC-1] : { [S,close] SC ; V ; T ; true } => { [S,open1] SC ; V ; T ; false } [narrowing] .
  rl [open1-2] : { [S,open1] SC ; V ; T ; true } => { [S,open2] SC ; V ; T ; false } [narrowing] .
  rl [open2-3] : { [S,open2] SC ; V ; T ; true } => { [S,open3] SC ; V ; T ; false } [narrowing] .
  
  rl [close1-C] : { [S, open1] SC ; V ; T ; true } => { [S,close] SC ; V ; T ; false } [narrowing] .
  rl [close2-1] : { [S, open2] SC ; V ; T ; true } => { [S,open1] SC ; V ; T ; false } [narrowing] .
  rl [close3-2] : { [S, open3] SC ; V ; T ; true } => { [S,open2] SC ; V ; T ; false } [narrowing] .
  
  rl [nocmd] : { SC ; V ; T ; true } => { SC ; V ; T ; false } [narrowing] . 
  
  op deltaT : -> TimeStamp .
  eq deltaT = 5/1 [variant] .

  op inflow : -> Real . 
  eq inflow = 2000/1 [variant] .
    
  op aperture : Aperture -> Real .
  
  eq aperture(close) = 0/1 [variant] .
  eq aperture(open1) = 200/1 [variant] .
  
  eq aperture(open2) = 400/1 [variant] .
  eq aperture(open3) = 1200/1 [variant] .
    
  var O : Aperture .  
  
  op outflow : Spillways -> Real .
  
  eq outflow(empty) = 0/1 [variant] .
  eq outflow([S,O] SC) = aperture(O) + outflow(SC) [variant] .	
  
  --- The volume rule models the basin volume variation in time interval [T,T+deltaT] depending on the outflow of the spillways and the inflow capacity.
  --- Assumption:  1 time unit corresponds to 1 minute.
  --- Note that, thanks to the ApertureCommand? flag, the application of volume is in mutal exclusion with the application of 
  --- any close/open/nocmd rule. In other words, the open/close/nocmd rules and the volume rule cannot be applied concurrently: 
  --- either an aperture command is executed or the basin volume modification w.r.t. the current spillways 
  --- configuration is observed.
 
  crl [volume] :  { SC ; V ; T ; false } => { SC ; V' ; (T + deltaT) ; true }  
                                          if (V' === (V + inflow * deltaT) - (outflow(SC) * deltaT)) = true [nonexec] .
endm
