load smt.maude

mod BANK-ACCOUNT is 
    protecting REAL-INTEGER .
    protecting TRUTH-VALUE .

    sorts Account Msg MsgConf State StatePair .
    subsort  Msg < MsgConf .

    op < bal:_pend:_overdraft:_> : Real Real Bool -> Account [ctor] . 
    op mt : -> MsgConf [ctor] .
    op withdraw : Real -> Msg [ctor] .
    op _,_ : MsgConf MsgConf -> MsgConf [ctor assoc comm id: mt] . 
    op _#_ : Account MsgConf -> State [ctor] .  ***  state ctor

    vars n n' m x y x' y' : Real .    vars b b' : Bool .
    vars s s' : State . var msgs : MsgConf .


    *** requesting to draw money having sufficient funds; the amount
    *** requested is added to the amount of pending withdraw requests
    rl [w-req] : < bal: n + m + x pend: x overdraft: false > # msgs => 
                    < bal: n + m + x pend: x + m overdraft: false > # withdraw(m),msgs [narrowing] .

    *** more money can be deposited in the account if not in overdraft
    rl [dep] :  < bal: n pend: x overdraft: false > # msgs =>
                    < bal: n + m pend: x overdraft: false > # msgs [narrowing nonexec] .

    *** actual withdrawing of money from account
    crl [w1] :  < bal: n pend: x overdraft: false > # withdraw(m),msgs => 
                    < bal: n pend: x overdraft: true > # msgs  
                        if (m > n) = true .

    *** actual withdrawing of money from account
    crl [w2] :  < bal: n pend: x overdraft: false > # withdraw(m),msgs => 
                    < bal: (n - m) pend: (x - m) overdraft: false > # msgs  
                        if (m <= n) = true .
endm
